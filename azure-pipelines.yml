trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

strategy:
  matrix:
    node_13_x:
      node_version: 13.x


variables:
  bin: './bin'

steps:
- task: NodeTool@0 
  inputs:
    versionSpec: $(node_version)


- script: npm install uglify-js --global

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      # See: https://github.com/elm/compiler/blob/master/installers/linux/README.md
      #
      # Download the 0.19.1 binary for Linux.
      #
      # +-----------+----------------------+
      # | FLAG      | MEANING              |
      # +-----------+----------------------+
      # | -L        | follow redirects     |
      # | -o elm.gz | name the file elm.gz |
      # +-----------+----------------------+
      #
      curl -L -o elm.gz https://github.com/elm/compiler/releases/download/0.19.1/binary-for-linux-64-bit.gz
      
      # The downloaded file is compressed to make it faster to download.
      # This next command decompresses it, replacing `elm.gz` with `elm`.
      #
      gunzip elm.gz
      
      # There should now be a file named `elm` on your Desktop!
      #
      # Every file has "permissions" about whether it can be read, written, or executed.
      # So before we use this file, we need to mark this file as executable:
      #
      chmod +x elm
      
      # Now it should be possible to run the `elm` binary just by saying its name!
      #
      ./elm --help
  displayName: 'Elm - Install'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'mkdir bin'
  displayName: 'Create bin folder'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      ./elm make src/Main.elm --optimize --output=$(bin)/main.js
      uglifyjs $(bin)/main.js --compress 'pure_funcs="F2,F3,F4,F5,F6,F7,F8,F9,A2,A3,A4,A5,A6,A7,A8,A9",pure_getters,keep_fargs=false,unsafe_comps,unsafe' | uglifyjs --mangle --output=$(bin)/main.min.js
  displayName: 'Elm - Compile'

- task: CopyFiles@2
  inputs:
    SourceFolder: './src'
    Contents: 'index.html'
    TargetFolder: $(bin)
  displayName: 'Copy index.html'

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: $(bin)
    artifactName: bin
  displayName: 'Artifacts - Publish'
